{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/dvarmtk.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Computes the variance of a double-precision floating-point strided array provided a known mean and using a one-pass textbook algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} mean - mean\n* @param {number} correction - degrees of freedom adjustment\n* @param {Float64Array} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} variance\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n*\n* var x = new Float64Array( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n*\n* var v = dvarmtk( 4, 1.25, 1, x, 2, 1 );\n* // returns 6.25\n*/\nfunction dvarmtk( N, mean, correction, x, strideX, offsetX ) {\n\tvar ix;\n\tvar M2;\n\tvar d;\n\tvar n;\n\tvar i;\n\n\tn = N - correction;\n\tif ( N <= 0 || n <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || strideX === 0 ) {\n\t\treturn 0.0;\n\t}\n\tix = offsetX;\n\tM2 = 0.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\td = x[ ix ] - mean;\n\t\tM2 += d * d;\n\t\tix += strideX;\n\t}\n\treturn M2 / n;\n}\n\n\n// EXPORTS //\n\nexport default dvarmtk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Computes the variance of a double-precision floating-point strided array provided a known mean and using a one-pass textbook algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} mean - mean\n* @param {number} correction - degrees of freedom adjustment\n* @param {Float64Array} x - input array\n* @param {integer} strideX - stride length\n* @returns {number} variance\n*\n* @example\n* import Float64Array from '@stdlib/array-float64';\n*\n* var x = new Float64Array( [ 1.0, -2.0, 2.0 ] );\n*\n* var v = dvarmtk( x.length, 1.0/3.0, 1, x, 1 );\n* // returns ~4.3333\n*/\nfunction dvarmtk( N, mean, correction, x, strideX ) {\n\treturn ndarray( N, mean, correction, x, strideX, stride2offset( N, strideX ) ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default dvarmtk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport dvarmtk from './dvarmtk.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( dvarmtk, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default dvarmtk;\n"],"names":["dvarmtk","N","mean","correction","x","strideX","offsetX","ix","M2","d","n","i","NaN","ndarray","stride2offset","setReadOnly"],"mappings":";;6NAyCA,SAASA,EAASC,EAAGC,EAAMC,EAAYC,EAAGC,EAASC,GAClD,IAAIC,EACAC,EACAC,EACAC,EACAC,EAGJ,GADAD,EAAIT,EAAIE,EACHF,GAAK,GAAKS,GAAK,EACnB,OAAOE,IAER,GAAW,IAANX,GAAuB,IAAZI,EACf,OAAO,EAIR,IAFAE,EAAKD,EACLE,EAAK,EACCG,EAAI,EAAGA,EAAIV,EAAGU,IAEnBH,IADAC,EAAIL,EAAGG,GAAOL,GACJO,EACVF,GAAMF,EAEP,OAAOG,EAAKE,CACb,CCjBA,SAASV,EAASC,EAAGC,EAAMC,EAAYC,EAAGC,GACzC,OAAOQ,EAASZ,EAAGC,EAAMC,EAAYC,EAAGC,EAASS,EAAeb,EAAGI,GACpE,CCnBAU,EAAAf,EAAA,UAAAa"}